import { db } from "./firebase-config.js";
import { doc, getDoc, updateDoc, setDoc } from "https://www.gstatic.com/firebasejs/10.9.0/firebase-firestore.js";

const walletBalanceElement = document.getElementById("walletBalance");
const userWalletRef = doc(db, "users", "user1");

// ‚úÖ Wallet Load Function
async function loadWallet() {
    const walletSnap = await getDoc(userWalletRef);
    if (walletSnap.exists()) {
        walletBalanceElement.innerText = walletSnap.data().balance;
    } else {
        await setDoc(userWalletRef, { balance: 1000 }); // Default ‚Çπ1000
        walletBalanceElement.innerText = 1000;
    }
}

// üé≤ Bet Place Function
async function placeBet(color) {
    const amount = 100; // Fixed Bet ‚Çπ100
    const walletSnap = await getDoc(userWalletRef);

    if (walletSnap.exists()) {
        let currentBalance = walletSnap.data().balance;

        if (currentBalance >= amount) {
            let newBalance = currentBalance - amount;
            await updateDoc(userWalletRef, { balance: newBalance });
            walletBalanceElement.innerText = newBalance;
            alert(`‚úÖ Bet placed on ${color} for ‚Çπ${amount}. New Balance: ‚Çπ${newBalance}`);
        } else {
            alert("‚ùå Insufficient balance! Please add money.");
        }
    }
}

// ‚ûï Add ‚Çπ500 to Wallet
async function addMoney() {
    const walletSnap = await getDoc(userWalletRef);
    if (walletSnap.exists()) {
        let newBalance = walletSnap.data().balance + 500;
        await updateDoc(userWalletRef, { balance: newBalance });
        walletBalanceElement.innerText = newBalance;
        alert("‚úÖ ‚Çπ500 Added to Wallet!");
    }
}

// ‚ûñ Withdraw ‚Çπ500 from Wallet
async function withdrawMoney() {
    const walletSnap = await getDoc(userWalletRef);
    if (walletSnap.exists()) {
        let currentBalance = walletSnap.data().balance;
        if (currentBalance >= 500) {
            let newBalance = currentBalance - 500;
            await updateDoc(userWalletRef, { balance: newBalance });
            walletBalanceElement.innerText = newBalance;
            alert("‚úÖ ‚Çπ500 Withdrawn from Wallet!");
        } else {
            alert("‚ùå Insufficient Balance!");
        }
    }
}

// üöÄ Load Wallet on Page Load
loadWallet();
